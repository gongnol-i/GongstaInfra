version: "3.8"

services:
  # nginx:
  #   container_name: nginx
  #   build:
  #     context: ./nginx
  #   ports:
  #     - "8080:80" # 호스트의 8080 포트를 Nginx의 80번 포트로 매핑
  #   depends_on:
  #     - backend
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
  #   networks:
  #     - app-network

  # backend:
  #   container_name: spring-boot
  #   build:
  #     context: ./backend
  #   ports:
  #     - "8081:8080" # Spring Boot 기본 포트인 8080을 8081로 노출
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/zune
  #     SPRING_DATASOURCE_USERNAME: gongsta
  #     SPRING_DATASOURCE_PASSWORD: qwer1234
  #   depends_on:
  #     - database
  #   networks:
  #     - app-network

  database:
    container_name: postgres
    image: postgres:15
    ports:
      - "5432:5432" # PostgreSQL 포트
    environment:
      POSTGRES_DB: zune
      POSTGRES_USER: gongsta
      POSTGRES_PASSWORD: qwer1234
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

volumes:
  db-data:

networks:
  app-network:
    driver: bridge
